// Code generated by goctl. DO NOT EDIT.
// Source: conversation.proto

package server

import (
	"context"

	"github.com/cherish-chat/xxim-server/app/conversation/internal/logic/conversationservice"
	"github.com/cherish-chat/xxim-server/app/conversation/internal/svc"
	"github.com/cherish-chat/xxim-server/common/pb"
)

type ConversationServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedConversationServiceServer
}

func NewConversationServiceServer(svcCtx *svc.ServiceContext) *ConversationServiceServer {
	return &ConversationServiceServer{
		svcCtx: svcCtx,
	}
}

// ConversationSettingUpdate 更新会话设置
func (s *ConversationServiceServer) ConversationSettingUpdate(ctx context.Context, in *pb.ConversationSettingUpdateReq) (*pb.ConversationSettingUpdateResp, error) {
	l := conversationservicelogic.NewConversationSettingUpdateLogic(ctx, s.svcCtx)
	return l.ConversationSettingUpdate(in)
}

// ListJoinedConversations 列出加入的会话
func (s *ConversationServiceServer) ListJoinedConversations(ctx context.Context, in *pb.ListJoinedConversationsReq) (*pb.ListJoinedConversationsResp, error) {
	l := conversationservicelogic.NewListJoinedConversationsLogic(ctx, s.svcCtx)
	return l.ListJoinedConversations(in)
}
