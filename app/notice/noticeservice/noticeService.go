// Code generated by goctl. DO NOT EDIT!
// Source: notice.proto

package noticeservice

import (
	"context"

	"github.com/cherish-chat/xxim-server/common/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	NoticeInsertReq  = pb.NoticeInsertReq
	NoticeInsertResp = pb.NoticeInsertResp

	NoticeService interface {
		// NoticeInsert 插入公告
		NoticeInsert(ctx context.Context, in *NoticeInsertReq, opts ...grpc.CallOption) (*NoticeInsertResp, error)
	}

	defaultNoticeService struct {
		cli zrpc.Client
	}
)

func NewNoticeService(cli zrpc.Client) NoticeService {
	return &defaultNoticeService{
		cli: cli,
	}
}

// NoticeInsert 插入公告
func (m *defaultNoticeService) NoticeInsert(ctx context.Context, in *NoticeInsertReq, opts ...grpc.CallOption) (*NoticeInsertResp, error) {
	client := pb.NewNoticeServiceClient(m.cli.Conn())
	return client.NoticeInsert(ctx, in, opts...)
}
