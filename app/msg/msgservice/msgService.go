// Code generated by goctl. DO NOT EDIT!
// Source: msg.proto

package msgservice

import (
	"context"

	"github.com/cherish-chat/xxim-server/common/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	MsgInsertReq  = pb.MsgInsertReq
	MsgInsertResp = pb.MsgInsertResp

	MsgService interface {
		// MsgInsert 插入消息
		MsgInsert(ctx context.Context, in *MsgInsertReq, opts ...grpc.CallOption) (*MsgInsertResp, error)
	}

	defaultMsgService struct {
		cli zrpc.Client
	}
)

func NewMsgService(cli zrpc.Client) MsgService {
	return &defaultMsgService{
		cli: cli,
	}
}

// MsgInsert 插入消息
func (m *defaultMsgService) MsgInsert(ctx context.Context, in *MsgInsertReq, opts ...grpc.CallOption) (*MsgInsertResp, error) {
	client := pb.NewMsgServiceClient(m.cli.Conn())
	return client.MsgInsert(ctx, in, opts...)
}
