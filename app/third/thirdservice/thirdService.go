// Code generated by goctl. DO NOT EDIT!
// Source: third.proto

package thirdservice

import (
	"context"

	"github.com/cherish-chat/xxim-server/common/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ThirdSendSmsReq  = pb.ThirdSendSmsReq
	ThirdSendSmsResp = pb.ThirdSendSmsResp

	ThirdService interface {
		// SendSms 发送短信
		SendSms(ctx context.Context, in *ThirdSendSmsReq, opts ...grpc.CallOption) (*ThirdSendSmsResp, error)
	}

	defaultThirdService struct {
		cli zrpc.Client
	}
)

func NewThirdService(cli zrpc.Client) ThirdService {
	return &defaultThirdService{
		cli: cli,
	}
}

// SendSms 发送短信
func (m *defaultThirdService) SendSms(ctx context.Context, in *ThirdSendSmsReq, opts ...grpc.CallOption) (*ThirdSendSmsResp, error) {
	client := pb.NewThirdServiceClient(m.cli.Conn())
	return client.SendSms(ctx, in, opts...)
}
