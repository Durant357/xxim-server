// Code generated by goctl. DO NOT EDIT!
// Source: gateway.proto

package gatewayservice

import (
	"context"

	"github.com/cherish-chat/xxim-server/common/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GatewayPostReq       = pb.GatewayPostReq
	GatewayPostReqOption = pb.GatewayPostReqOption
	GatewayPostResp      = pb.GatewayPostResp

	GatewayService interface {
		Post(ctx context.Context, in *GatewayPostReq, opts ...grpc.CallOption) (*GatewayPostResp, error)
	}

	defaultGatewayService struct {
		cli zrpc.Client
	}
)

func NewGatewayService(cli zrpc.Client) GatewayService {
	return &defaultGatewayService{
		cli: cli,
	}
}

func (m *defaultGatewayService) Post(ctx context.Context, in *GatewayPostReq, opts ...grpc.CallOption) (*GatewayPostResp, error) {
	client := pb.NewGatewayServiceClient(m.cli.Conn())
	return client.Post(ctx, in, opts...)
}
